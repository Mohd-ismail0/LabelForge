{"ast":null,"code":"var _jsxFileName = \"/workspace/src/components/Generation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useApp } from '../context/AppContext';\nimport { renderLabel, LABEL_SIZES } from '../utils/labelRenderer';\nimport jsPDF from 'jspdf';\nimport JSZip from 'jszip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Generation = () => {\n  _s();\n  const {\n    state,\n    actions\n  } = useApp();\n  const {\n    excelData,\n    mappedColumns,\n    labelSettings,\n    quantitySettings\n  } = state;\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [showPageSizeSelection, setShowPageSizeSelection] = useState(false);\n  const [pageSize, setPageSize] = useState('a4');\n\n  // Use shared LABEL_SIZES from utils\n\n  const PAGE_SIZES = {\n    a4: {\n      width: 210,\n      height: 297,\n      unit: 'mm'\n    },\n    letter: {\n      width: 216,\n      height: 279,\n      unit: 'mm'\n    },\n    legal: {\n      width: 216,\n      height: 356,\n      unit: 'mm'\n    }\n  };\n  const calculateSummary = () => {\n    if (!excelData) return {\n      products: 0,\n      labels: 0,\n      size: '',\n      barcodeType: ''\n    };\n    const products = excelData.rows.length;\n    let totalLabels = 0;\n    if (quantitySettings.type === 'column' && mappedColumns.quantity) {\n      const quantityColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.quantity);\n      totalLabels = excelData.rows.reduce((sum, row) => {\n        const qty = parseInt(row[quantityColumnIndex]) || 1;\n        return sum + qty;\n      }, 0);\n    } else if (quantitySettings.type === 'fixed') {\n      totalLabels = products * quantitySettings.fixedQuantity;\n    } else if (quantitySettings.type === 'manual') {\n      totalLabels = Object.values(quantitySettings.manualQuantities).reduce((sum, qty) => sum + qty, 0);\n    }\n    const currentSize = LABEL_SIZES[labelSettings.size] || LABEL_SIZES['2x1'];\n    const size = labelSettings.size === 'custom' ? {\n      width: labelSettings.customWidth,\n      height: labelSettings.customHeight\n    } : currentSize;\n    const sizeText = `${size.width}\" x ${size.height}\"`;\n    return {\n      products,\n      labels: totalLabels,\n      size: sizeText,\n      barcodeType: labelSettings.barcodeType\n    };\n  };\n  const summary = calculateSummary();\n  const generateLabels = async () => {\n    if (!excelData || !mappedColumns.barcode) {\n      actions.setError('Missing required data for label generation');\n      return;\n    }\n    setIsGenerating(true);\n    setGenerationProgress(0);\n    try {\n      const labels = [];\n      const barcodeColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.barcode);\n      const textColumns = mappedColumns.text.map(col => excelData.columnHeaders.indexOf(col)).filter(index => index !== -1);\n      let processedCount = 0;\n      const totalRows = excelData.rows.length;\n      for (let rowIndex = 0; rowIndex < excelData.rows.length; rowIndex++) {\n        const row = excelData.rows[rowIndex];\n        const barcode = row[barcodeColumnIndex];\n        if (!barcode) continue;\n\n        // Get quantity for this row\n        let quantity = 1;\n        if (quantitySettings.type === 'column' && mappedColumns.quantity) {\n          const quantityColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.quantity);\n          quantity = parseInt(row[quantityColumnIndex]) || 1;\n        } else if (quantitySettings.type === 'fixed') {\n          quantity = quantitySettings.fixedQuantity;\n        } else if (quantitySettings.type === 'manual') {\n          quantity = quantitySettings.manualQuantities[rowIndex] || 1;\n        }\n\n        // Get text content\n        const textContent = textColumns.map(colIndex => row[colIndex]).filter(val => val).join(' - ');\n\n        // Generate labels for this product\n        for (let i = 0; i < quantity; i++) {\n          const labelData = {\n            barcode,\n            text: textContent,\n            productIndex: rowIndex,\n            labelIndex: i\n          };\n          labels.push(labelData);\n        }\n        processedCount++;\n        setGenerationProgress(processedCount / totalRows * 100);\n      }\n      actions.setGeneratedLabels(labels);\n      setGenerationProgress(100);\n    } catch (error) {\n      actions.setError('Error generating labels: ' + error.message);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const downloadZIP = async () => {\n    if (!state.generatedLabels.length) {\n      actions.setError('No labels generated yet');\n      return;\n    }\n    try {\n      actions.setLoading(true);\n      const zip = new JSZip();\n      for (let i = 0; i < state.generatedLabels.length; i++) {\n        const label = state.generatedLabels[i];\n\n        // Use shared rendering function for consistency with design\n        const canvas = renderLabel(label, labelSettings, labelSettings.elements);\n\n        // Convert to blob and add to zip\n        const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/png'));\n        zip.file(`label_${label.productIndex + 1}_${label.labelIndex + 1}.png`, blob);\n      }\n      const zipBlob = await zip.generateAsync({\n        type: 'blob'\n      });\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'barcode_labels.zip';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      actions.setError('Error creating ZIP file: ' + error.message);\n    } finally {\n      actions.setLoading(false);\n    }\n  };\n  const downloadPDF = async () => {\n    if (!state.generatedLabels.length) {\n      actions.setError('No labels generated yet');\n      return;\n    }\n    try {\n      actions.setLoading(true);\n      const pdf = new jsPDF({\n        orientation: 'portrait',\n        unit: 'mm',\n        format: pageSize\n      });\n      const currentSize = LABEL_SIZES[labelSettings.size] || LABEL_SIZES['2x1'];\n      const size = labelSettings.size === 'custom' ? {\n        width: labelSettings.customWidth,\n        height: labelSettings.customHeight\n      } : currentSize;\n      const pageSizeInfo = PAGE_SIZES[pageSize];\n\n      // Calculate labels per page\n      const labelWidthMM = size.width * 25.4; // Convert inches to mm\n      const labelHeightMM = size.height * 25.4;\n      const margin = 10; // 10mm margin\n\n      const labelsPerRow = Math.floor((pageSizeInfo.width - 2 * margin) / labelWidthMM);\n      const labelsPerColumn = Math.floor((pageSizeInfo.height - 2 * margin) / labelHeightMM);\n      const labelsPerPage = labelsPerRow * labelsPerColumn;\n      let currentPage = 0;\n      let currentRow = 0;\n      let currentCol = 0;\n      for (let i = 0; i < state.generatedLabels.length; i++) {\n        const label = state.generatedLabels[i];\n        if (i > 0 && i % labelsPerPage === 0) {\n          pdf.addPage();\n          currentPage++;\n          currentRow = 0;\n          currentCol = 0;\n        }\n\n        // Calculate position\n        const x = margin + currentCol * labelWidthMM;\n        const y = margin + currentRow * labelHeightMM;\n\n        // Use shared rendering function for consistency with design\n        const canvas = renderLabel(label, labelSettings, labelSettings.elements);\n\n        // Convert canvas to image and add to PDF\n        const imgData = canvas.toDataURL('image/png');\n        pdf.addImage(imgData, 'PNG', x, y, labelWidthMM, labelHeightMM);\n\n        // Update position\n        currentCol++;\n        if (currentCol >= labelsPerRow) {\n          currentCol = 0;\n          currentRow++;\n        }\n      }\n      pdf.save('barcode_labels.pdf');\n    } catch (error) {\n      actions.setError('Error creating PDF: ' + error.message);\n    } finally {\n      actions.setLoading(false);\n    }\n  };\n  const handlePrevious = () => {\n    actions.setStep(4);\n  };\n  const handleStartOver = () => {\n    actions.resetApp();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Step 5: Generate & Export Labels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-description\",\n        children: \"Generate your labels and download in your preferred format\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generation-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Final Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"File:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: (excelData === null || excelData === void 0 ? void 0 : excelData.fileName) || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Products:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: summary.products\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Total Labels:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: summary.labels\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Label Size:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: summary.size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Barcode Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: summary.barcodeType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generation-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-large\",\n          onClick: generateLabels,\n          disabled: isGenerating,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\uD83D\\uDE80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), \"Generate All Labels\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generation-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${generationProgress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Generating labels... \", Math.round(generationProgress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), state.generatedLabels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Download Your Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), showPageSizeSelection && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-size-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Select Page Size for PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-size-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"page-a4\",\n                name: \"page-size\",\n                value: \"a4\",\n                checked: pageSize === 'a4',\n                onChange: e => setPageSize(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"page-a4\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-title\",\n                  children: \"A4 (210 \\xD7 297 mm)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-description\",\n                  children: \"Standard international size\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"page-letter\",\n                name: \"page-size\",\n                value: \"letter\",\n                checked: pageSize === 'letter',\n                onChange: e => setPageSize(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"page-letter\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-title\",\n                  children: \"Letter (8.5 \\xD7 11 in)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-description\",\n                  children: \"Standard US size\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"page-legal\",\n                name: \"page-size\",\n                value: \"legal\",\n                checked: pageSize === 'legal',\n                onChange: e => setPageSize(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"page-legal\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-title\",\n                  children: \"Legal (8.5 \\xD7 14 in)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-description\",\n                  children: \"Extended length\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"download-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-large\",\n            onClick: downloadZIP,\n            disabled: state.loading,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: \"\\uD83D\\uDCE6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), \"Download ZIP\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-description\",\n              children: \"Individual label images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary btn-large\",\n            onClick: () => {\n              setShowPageSizeSelection(!showPageSizeSelection);\n              if (!showPageSizeSelection) {\n                setTimeout(downloadPDF, 100);\n              }\n            },\n            disabled: state.loading,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: \"\\uD83D\\uDCC4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this), \"Download PDF\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-description\",\n              children: \"Print-ready labels in PDF format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"download-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ZIP Format:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 18\n            }, this), \" Contains individual high-resolution label images for custom printing or integration.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PDF Format:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 18\n            }, this), \" Optimized for printing with proper margins and cut lines. Compatible with Avery label sheets.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline\",\n          onClick: handlePrevious,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handleStartOver,\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(Generation, \"B16FfXjsJFtbd6wXgy+F5QSJdsE=\", false, function () {\n  return [useApp];\n});\n_c = Generation;\nexport default Generation;\nvar _c;\n$RefreshReg$(_c, \"Generation\");","map":{"version":3,"names":["React","useState","useEffect","useApp","renderLabel","LABEL_SIZES","jsPDF","JSZip","jsxDEV","_jsxDEV","Generation","_s","state","actions","excelData","mappedColumns","labelSettings","quantitySettings","generationProgress","setGenerationProgress","isGenerating","setIsGenerating","showPageSizeSelection","setShowPageSizeSelection","pageSize","setPageSize","PAGE_SIZES","a4","width","height","unit","letter","legal","calculateSummary","products","labels","size","barcodeType","rows","length","totalLabels","type","quantity","quantityColumnIndex","columnHeaders","indexOf","reduce","sum","row","qty","parseInt","fixedQuantity","Object","values","manualQuantities","currentSize","customWidth","customHeight","sizeText","summary","generateLabels","barcode","setError","barcodeColumnIndex","textColumns","text","map","col","filter","index","processedCount","totalRows","rowIndex","textContent","colIndex","val","join","i","labelData","productIndex","labelIndex","push","setGeneratedLabels","error","message","downloadZIP","generatedLabels","setLoading","zip","label","canvas","elements","blob","Promise","resolve","toBlob","file","zipBlob","generateAsync","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","downloadPDF","pdf","orientation","format","pageSizeInfo","labelWidthMM","labelHeightMM","margin","labelsPerRow","Math","floor","labelsPerColumn","labelsPerPage","currentPage","currentRow","currentCol","addPage","x","y","imgData","toDataURL","addImage","save","handlePrevious","setStep","handleStartOver","resetApp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","round","id","name","value","checked","onChange","e","target","htmlFor","loading","setTimeout","_c","$RefreshReg$"],"sources":["/workspace/src/components/Generation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useApp } from '../context/AppContext';\nimport { renderLabel, LABEL_SIZES } from '../utils/labelRenderer';\nimport jsPDF from 'jspdf';\nimport JSZip from 'jszip';\n\nconst Generation = () => {\n  const { state, actions } = useApp();\n  const { excelData, mappedColumns, labelSettings, quantitySettings } = state;\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [showPageSizeSelection, setShowPageSizeSelection] = useState(false);\n  const [pageSize, setPageSize] = useState('a4');\n\n  // Use shared LABEL_SIZES from utils\n\n  const PAGE_SIZES = {\n    a4: { width: 210, height: 297, unit: 'mm' },\n    letter: { width: 216, height: 279, unit: 'mm' },\n    legal: { width: 216, height: 356, unit: 'mm' }\n  };\n\n  const calculateSummary = () => {\n    if (!excelData) return { products: 0, labels: 0, size: '', barcodeType: '' };\n\n    const products = excelData.rows.length;\n    let totalLabels = 0;\n\n    if (quantitySettings.type === 'column' && mappedColumns.quantity) {\n      const quantityColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.quantity);\n      totalLabels = excelData.rows.reduce((sum, row) => {\n        const qty = parseInt(row[quantityColumnIndex]) || 1;\n        return sum + qty;\n      }, 0);\n    } else if (quantitySettings.type === 'fixed') {\n      totalLabels = products * quantitySettings.fixedQuantity;\n    } else if (quantitySettings.type === 'manual') {\n      totalLabels = Object.values(quantitySettings.manualQuantities).reduce((sum, qty) => sum + qty, 0);\n    }\n\n    const currentSize = LABEL_SIZES[labelSettings.size] || LABEL_SIZES['2x1'];\n    const size = labelSettings.size === 'custom' \n      ? { width: labelSettings.customWidth, height: labelSettings.customHeight }\n      : currentSize;\n    const sizeText = `${size.width}\" x ${size.height}\"`;\n\n    return {\n      products,\n      labels: totalLabels,\n      size: sizeText,\n      barcodeType: labelSettings.barcodeType\n    };\n  };\n\n  const summary = calculateSummary();\n\n  const generateLabels = async () => {\n    if (!excelData || !mappedColumns.barcode) {\n      actions.setError('Missing required data for label generation');\n      return;\n    }\n\n    setIsGenerating(true);\n    setGenerationProgress(0);\n\n    try {\n      const labels = [];\n      const barcodeColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.barcode);\n      const textColumns = mappedColumns.text.map(col => \n        excelData.columnHeaders.indexOf(col)\n      ).filter(index => index !== -1);\n\n      let processedCount = 0;\n      const totalRows = excelData.rows.length;\n\n      for (let rowIndex = 0; rowIndex < excelData.rows.length; rowIndex++) {\n        const row = excelData.rows[rowIndex];\n        const barcode = row[barcodeColumnIndex];\n        \n        if (!barcode) continue;\n\n        // Get quantity for this row\n        let quantity = 1;\n        if (quantitySettings.type === 'column' && mappedColumns.quantity) {\n          const quantityColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.quantity);\n          quantity = parseInt(row[quantityColumnIndex]) || 1;\n        } else if (quantitySettings.type === 'fixed') {\n          quantity = quantitySettings.fixedQuantity;\n        } else if (quantitySettings.type === 'manual') {\n          quantity = quantitySettings.manualQuantities[rowIndex] || 1;\n        }\n\n        // Get text content\n        const textContent = textColumns.map(colIndex => row[colIndex]).filter(val => val).join(' - ');\n\n        // Generate labels for this product\n        for (let i = 0; i < quantity; i++) {\n          const labelData = {\n            barcode,\n            text: textContent,\n            productIndex: rowIndex,\n            labelIndex: i\n          };\n          labels.push(labelData);\n        }\n\n        processedCount++;\n        setGenerationProgress((processedCount / totalRows) * 100);\n      }\n\n      actions.setGeneratedLabels(labels);\n      setGenerationProgress(100);\n    } catch (error) {\n      actions.setError('Error generating labels: ' + error.message);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const downloadZIP = async () => {\n    if (!state.generatedLabels.length) {\n      actions.setError('No labels generated yet');\n      return;\n    }\n\n    try {\n      actions.setLoading(true);\n      const zip = new JSZip();\n\n      for (let i = 0; i < state.generatedLabels.length; i++) {\n        const label = state.generatedLabels[i];\n        \n        // Use shared rendering function for consistency with design\n        const canvas = renderLabel(label, labelSettings, labelSettings.elements);\n        \n        // Convert to blob and add to zip\n        const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/png'));\n        zip.file(`label_${label.productIndex + 1}_${label.labelIndex + 1}.png`, blob);\n      }\n\n      const zipBlob = await zip.generateAsync({ type: 'blob' });\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'barcode_labels.zip';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      actions.setError('Error creating ZIP file: ' + error.message);\n    } finally {\n      actions.setLoading(false);\n    }\n  };\n\n  const downloadPDF = async () => {\n    if (!state.generatedLabels.length) {\n      actions.setError('No labels generated yet');\n      return;\n    }\n\n    try {\n      actions.setLoading(true);\n      const pdf = new jsPDF({\n        orientation: 'portrait',\n        unit: 'mm',\n        format: pageSize\n      });\n\n      const currentSize = LABEL_SIZES[labelSettings.size] || LABEL_SIZES['2x1'];\n      const size = labelSettings.size === 'custom' \n        ? { width: labelSettings.customWidth, height: labelSettings.customHeight }\n        : currentSize;\n      const pageSizeInfo = PAGE_SIZES[pageSize];\n      \n      // Calculate labels per page\n      const labelWidthMM = size.width * 25.4; // Convert inches to mm\n      const labelHeightMM = size.height * 25.4;\n      const margin = 10; // 10mm margin\n      \n      const labelsPerRow = Math.floor((pageSizeInfo.width - 2 * margin) / labelWidthMM);\n      const labelsPerColumn = Math.floor((pageSizeInfo.height - 2 * margin) / labelHeightMM);\n      const labelsPerPage = labelsPerRow * labelsPerColumn;\n\n      let currentPage = 0;\n      let currentRow = 0;\n      let currentCol = 0;\n\n      for (let i = 0; i < state.generatedLabels.length; i++) {\n        const label = state.generatedLabels[i];\n        \n        if (i > 0 && i % labelsPerPage === 0) {\n          pdf.addPage();\n          currentPage++;\n          currentRow = 0;\n          currentCol = 0;\n        }\n\n        // Calculate position\n        const x = margin + currentCol * labelWidthMM;\n        const y = margin + currentRow * labelHeightMM;\n\n        // Use shared rendering function for consistency with design\n        const canvas = renderLabel(label, labelSettings, labelSettings.elements);\n        \n        // Convert canvas to image and add to PDF\n        const imgData = canvas.toDataURL('image/png');\n        pdf.addImage(imgData, 'PNG', x, y, labelWidthMM, labelHeightMM);\n\n        // Update position\n        currentCol++;\n        if (currentCol >= labelsPerRow) {\n          currentCol = 0;\n          currentRow++;\n        }\n      }\n\n      pdf.save('barcode_labels.pdf');\n    } catch (error) {\n      actions.setError('Error creating PDF: ' + error.message);\n    } finally {\n      actions.setLoading(false);\n    }\n  };\n\n  const handlePrevious = () => {\n    actions.setStep(4);\n  };\n\n  const handleStartOver = () => {\n    actions.resetApp();\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h2>Step 5: Generate & Export Labels</h2>\n        <p className=\"card-description\">\n          Generate your labels and download in your preferred format\n        </p>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"generation-summary\">\n          <div className=\"summary-card\">\n            <h4>Final Summary</h4>\n            <div className=\"summary-grid\">\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">File:</span>\n                <span className=\"summary-value\">{excelData?.fileName || '-'}</span>\n              </div>\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Products:</span>\n                <span className=\"summary-value\">{summary.products}</span>\n              </div>\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Total Labels:</span>\n                <span className=\"summary-value\">{summary.labels}</span>\n              </div>\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Label Size:</span>\n                <span className=\"summary-value\">{summary.size}</span>\n              </div>\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Barcode Type:</span>\n                <span className=\"summary-value\">{summary.barcodeType}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"generation-actions\">\n          <button\n            className=\"btn btn-primary btn-large\"\n            onClick={generateLabels}\n            disabled={isGenerating}\n          >\n            <span className=\"btn-icon\">🚀</span>\n            Generate All Labels\n          </button>\n        </div>\n\n        {isGenerating && (\n          <div className=\"generation-progress\">\n            <div className=\"progress-container\">\n              <div className=\"progress-bar\">\n                <div\n                  className=\"progress-fill\"\n                  style={{ width: `${generationProgress}%` }}\n                ></div>\n              </div>\n              <p>Generating labels... {Math.round(generationProgress)}%</p>\n            </div>\n          </div>\n        )}\n\n        {state.generatedLabels.length > 0 && (\n          <div className=\"download-section\">\n            <h4>Download Your Labels</h4>\n            \n            {showPageSizeSelection && (\n              <div className=\"page-size-selection\">\n                <h5>Select Page Size for PDF</h5>\n                <div className=\"page-size-options\">\n                  <div className=\"option-group\">\n                    <input\n                      type=\"radio\"\n                      id=\"page-a4\"\n                      name=\"page-size\"\n                      value=\"a4\"\n                      checked={pageSize === 'a4'}\n                      onChange={(e) => setPageSize(e.target.value)}\n                    />\n                    <label htmlFor=\"page-a4\">\n                      <span className=\"option-title\">A4 (210 × 297 mm)</span>\n                      <span className=\"option-description\">Standard international size</span>\n                    </label>\n                  </div>\n                  <div className=\"option-group\">\n                    <input\n                      type=\"radio\"\n                      id=\"page-letter\"\n                      name=\"page-size\"\n                      value=\"letter\"\n                      checked={pageSize === 'letter'}\n                      onChange={(e) => setPageSize(e.target.value)}\n                    />\n                    <label htmlFor=\"page-letter\">\n                      <span className=\"option-title\">Letter (8.5 × 11 in)</span>\n                      <span className=\"option-description\">Standard US size</span>\n                    </label>\n                  </div>\n                  <div className=\"option-group\">\n                    <input\n                      type=\"radio\"\n                      id=\"page-legal\"\n                      name=\"page-size\"\n                      value=\"legal\"\n                      checked={pageSize === 'legal'}\n                      onChange={(e) => setPageSize(e.target.value)}\n                    />\n                    <label htmlFor=\"page-legal\">\n                      <span className=\"option-title\">Legal (8.5 × 14 in)</span>\n                      <span className=\"option-description\">Extended length</span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"download-options\">\n              <button\n                className=\"btn btn-primary btn-large\"\n                onClick={downloadZIP}\n                disabled={state.loading}\n              >\n                <span className=\"btn-icon\">📦</span>\n                Download ZIP\n                <span className=\"btn-description\">Individual label images</span>\n              </button>\n              <button\n                className=\"btn btn-secondary btn-large\"\n                onClick={() => {\n                  setShowPageSizeSelection(!showPageSizeSelection);\n                  if (!showPageSizeSelection) {\n                    setTimeout(downloadPDF, 100);\n                  }\n                }}\n                disabled={state.loading}\n              >\n                <span className=\"btn-icon\">📄</span>\n                Download PDF\n                <span className=\"btn-description\">Print-ready labels in PDF format</span>\n              </button>\n            </div>\n            <div className=\"download-info\">\n              <p><strong>ZIP Format:</strong> Contains individual high-resolution label images for custom printing or integration.</p>\n              <p><strong>PDF Format:</strong> Optimized for printing with proper margins and cut lines. Compatible with Avery label sheets.</p>\n            </div>\n          </div>\n        )}\n\n        <div className=\"step-actions\">\n          <button className=\"btn btn-outline\" onClick={handlePrevious}>\n            Previous\n          </button>\n          <button className=\"btn btn-secondary\" onClick={handleStartOver}>\n            Start Over\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Generation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}