{"ast":null,"code":"var _jsxFileName = \"/workspace/src/components/QuantityManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useApp } from '../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuantityManagement = () => {\n  _s();\n  const {\n    state,\n    actions\n  } = useApp();\n  const {\n    excelData,\n    mappedColumns,\n    quantitySettings\n  } = state;\n  const [manualQuantities, setManualQuantities] = useState({});\n  useEffect(() => {\n    if (quantitySettings.type === 'manual' && excelData) {\n      const initialQuantities = {};\n      excelData.rows.forEach((row, index) => {\n        initialQuantities[index] = 1;\n      });\n      setManualQuantities(initialQuantities);\n    }\n  }, [quantitySettings.type, excelData]);\n  const handleQuantityTypeChange = type => {\n    actions.setQuantitySettings({\n      type\n    });\n  };\n  const handleFixedQuantityChange = value => {\n    actions.setQuantitySettings({\n      fixedQuantity: parseInt(value) || 1\n    });\n  };\n  const handleManualQuantityChange = (rowIndex, value) => {\n    const newQuantities = {\n      ...manualQuantities,\n      [rowIndex]: parseInt(value) || 1\n    };\n    setManualQuantities(newQuantities);\n    actions.setQuantitySettings({\n      manualQuantities: newQuantities\n    });\n  };\n  const calculateSummary = () => {\n    if (!excelData) return {\n      products: 0,\n      labels: 0,\n      pages: 0\n    };\n    const products = excelData.rows.length;\n    let totalLabels = 0;\n    if (quantitySettings.type === 'column' && mappedColumns.quantity) {\n      const quantityColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.quantity);\n      totalLabels = excelData.rows.reduce((sum, row) => {\n        const qty = parseInt(row[quantityColumnIndex]) || 1;\n        return sum + qty;\n      }, 0);\n    } else if (quantitySettings.type === 'fixed') {\n      totalLabels = products * quantitySettings.fixedQuantity;\n    } else if (quantitySettings.type === 'manual') {\n      totalLabels = Object.values(manualQuantities).reduce((sum, qty) => sum + qty, 0);\n    }\n\n    // Estimate pages (assuming 30 labels per page)\n    const pages = Math.ceil(totalLabels / 30);\n    return {\n      products,\n      labels: totalLabels,\n      pages\n    };\n  };\n  const summary = calculateSummary();\n  const handlePrevious = () => {\n    actions.setStep(3);\n  };\n  const handleNext = () => {\n    actions.setStep(5);\n  };\n  const getProductInfo = (row, index) => {\n    const barcodeColumnIndex = mappedColumns.barcode ? excelData.columnHeaders.indexOf(mappedColumns.barcode) : -1;\n    const textColumns = mappedColumns.text.map(col => excelData.columnHeaders.indexOf(col)).filter(index => index !== -1);\n    const barcode = barcodeColumnIndex !== -1 ? row[barcodeColumnIndex] : '';\n    const text = textColumns.map(colIndex => row[colIndex]).filter(val => val).join(' - ');\n    return {\n      barcode,\n      text: text || `Product ${index + 1}`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Step 4: Set Label Quantities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-description\",\n        children: \"Configure how many labels to generate for each product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quantity-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"qty-column\",\n            name: \"quantity-type\",\n            value: \"column\",\n            checked: quantitySettings.type === 'column',\n            onChange: e => handleQuantityTypeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"qty-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-title\",\n              children: \"Use quantity from Excel column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-description\",\n              children: \"Generate labels based on quantity values in your data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"qty-manual\",\n            name: \"quantity-type\",\n            value: \"manual\",\n            checked: quantitySettings.type === 'manual',\n            onChange: e => handleQuantityTypeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"qty-manual\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-title\",\n              children: \"Set quantity manually for each row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-description\",\n              children: \"Specify custom quantities for individual products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"qty-fixed\",\n            name: \"quantity-type\",\n            value: \"fixed\",\n            checked: quantitySettings.type === 'fixed',\n            onChange: e => handleQuantityTypeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"qty-fixed\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-title\",\n              children: \"Use fixed quantity for all products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-description\",\n              children: \"Generate the same number of labels for every product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fixed-quantity-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"fixed-quantity\",\n              value: quantitySettings.fixedQuantity,\n              min: \"1\",\n              max: \"1000\",\n              onChange: e => handleFixedQuantityChange(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-label\",\n              children: \"labels per product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), quantitySettings.type === 'manual' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manual-quantities\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Set Quantities for Each Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantities-table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"quantities-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Barcode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: excelData.rows.map((row, index) => {\n                const productInfo = getProductInfo(row, index);\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: productInfo.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: productInfo.barcode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"quantity-input\",\n                      value: manualQuantities[index] || 1,\n                      min: \"1\",\n                      max: \"1000\",\n                      onChange: e => handleManualQuantityChange(index, e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quantity-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Generation Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Total Products:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: summary.products\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Total Labels:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: summary.labels\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Estimated Pages:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: summary.pages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline\",\n          onClick: handlePrevious,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleNext,\n          children: \"Continue to Generation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(QuantityManagement, \"WTPgt0bBvGikGktz+Ao4v5TLObU=\", false, function () {\n  return [useApp];\n});\n_c = QuantityManagement;\nexport default QuantityManagement;\nvar _c;\n$RefreshReg$(_c, \"QuantityManagement\");","map":{"version":3,"names":["React","useState","useEffect","useApp","jsxDEV","_jsxDEV","QuantityManagement","_s","state","actions","excelData","mappedColumns","quantitySettings","manualQuantities","setManualQuantities","type","initialQuantities","rows","forEach","row","index","handleQuantityTypeChange","setQuantitySettings","handleFixedQuantityChange","value","fixedQuantity","parseInt","handleManualQuantityChange","rowIndex","newQuantities","calculateSummary","products","labels","pages","length","totalLabels","quantity","quantityColumnIndex","columnHeaders","indexOf","reduce","sum","qty","Object","values","Math","ceil","summary","handlePrevious","setStep","handleNext","getProductInfo","barcodeColumnIndex","barcode","textColumns","text","map","col","filter","colIndex","val","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","name","checked","onChange","e","target","htmlFor","min","max","productInfo","onClick","_c","$RefreshReg$"],"sources":["/workspace/src/components/QuantityManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useApp } from '../context/AppContext';\n\nconst QuantityManagement = () => {\n  const { state, actions } = useApp();\n  const { excelData, mappedColumns, quantitySettings } = state;\n  const [manualQuantities, setManualQuantities] = useState({});\n\n  useEffect(() => {\n    if (quantitySettings.type === 'manual' && excelData) {\n      const initialQuantities = {};\n      excelData.rows.forEach((row, index) => {\n        initialQuantities[index] = 1;\n      });\n      setManualQuantities(initialQuantities);\n    }\n  }, [quantitySettings.type, excelData]);\n\n  const handleQuantityTypeChange = (type) => {\n    actions.setQuantitySettings({ type });\n  };\n\n  const handleFixedQuantityChange = (value) => {\n    actions.setQuantitySettings({ fixedQuantity: parseInt(value) || 1 });\n  };\n\n  const handleManualQuantityChange = (rowIndex, value) => {\n    const newQuantities = { ...manualQuantities, [rowIndex]: parseInt(value) || 1 };\n    setManualQuantities(newQuantities);\n    actions.setQuantitySettings({ manualQuantities: newQuantities });\n  };\n\n  const calculateSummary = () => {\n    if (!excelData) return { products: 0, labels: 0, pages: 0 };\n\n    const products = excelData.rows.length;\n    let totalLabels = 0;\n\n    if (quantitySettings.type === 'column' && mappedColumns.quantity) {\n      const quantityColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.quantity);\n      totalLabels = excelData.rows.reduce((sum, row) => {\n        const qty = parseInt(row[quantityColumnIndex]) || 1;\n        return sum + qty;\n      }, 0);\n    } else if (quantitySettings.type === 'fixed') {\n      totalLabels = products * quantitySettings.fixedQuantity;\n    } else if (quantitySettings.type === 'manual') {\n      totalLabels = Object.values(manualQuantities).reduce((sum, qty) => sum + qty, 0);\n    }\n\n    // Estimate pages (assuming 30 labels per page)\n    const pages = Math.ceil(totalLabels / 30);\n\n    return { products, labels: totalLabels, pages };\n  };\n\n  const summary = calculateSummary();\n\n  const handlePrevious = () => {\n    actions.setStep(3);\n  };\n\n  const handleNext = () => {\n    actions.setStep(5);\n  };\n\n  const getProductInfo = (row, index) => {\n    const barcodeColumnIndex = mappedColumns.barcode ? \n      excelData.columnHeaders.indexOf(mappedColumns.barcode) : -1;\n    const textColumns = mappedColumns.text.map(col => \n      excelData.columnHeaders.indexOf(col)\n    ).filter(index => index !== -1);\n\n    const barcode = barcodeColumnIndex !== -1 ? row[barcodeColumnIndex] : '';\n    const text = textColumns.map(colIndex => row[colIndex]).filter(val => val).join(' - ');\n\n    return { barcode, text: text || `Product ${index + 1}` };\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h2>Step 4: Set Label Quantities</h2>\n        <p className=\"card-description\">\n          Configure how many labels to generate for each product\n        </p>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"quantity-options\">\n          <div className=\"option-group\">\n            <input\n              type=\"radio\"\n              id=\"qty-column\"\n              name=\"quantity-type\"\n              value=\"column\"\n              checked={quantitySettings.type === 'column'}\n              onChange={(e) => handleQuantityTypeChange(e.target.value)}\n            />\n            <label htmlFor=\"qty-column\">\n              <span className=\"option-title\">Use quantity from Excel column</span>\n              <span className=\"option-description\">\n                Generate labels based on quantity values in your data\n              </span>\n            </label>\n          </div>\n\n          <div className=\"option-group\">\n            <input\n              type=\"radio\"\n              id=\"qty-manual\"\n              name=\"quantity-type\"\n              value=\"manual\"\n              checked={quantitySettings.type === 'manual'}\n              onChange={(e) => handleQuantityTypeChange(e.target.value)}\n            />\n            <label htmlFor=\"qty-manual\">\n              <span className=\"option-title\">Set quantity manually for each row</span>\n              <span className=\"option-description\">\n                Specify custom quantities for individual products\n              </span>\n            </label>\n          </div>\n\n          <div className=\"option-group\">\n            <input\n              type=\"radio\"\n              id=\"qty-fixed\"\n              name=\"quantity-type\"\n              value=\"fixed\"\n              checked={quantitySettings.type === 'fixed'}\n              onChange={(e) => handleQuantityTypeChange(e.target.value)}\n            />\n            <label htmlFor=\"qty-fixed\">\n              <span className=\"option-title\">Use fixed quantity for all products</span>\n              <span className=\"option-description\">\n                Generate the same number of labels for every product\n              </span>\n            </label>\n            <div className=\"fixed-quantity-input\">\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"fixed-quantity\"\n                value={quantitySettings.fixedQuantity}\n                min=\"1\"\n                max=\"1000\"\n                onChange={(e) => handleFixedQuantityChange(e.target.value)}\n              />\n              <span className=\"input-label\">labels per product</span>\n            </div>\n          </div>\n        </div>\n\n        {quantitySettings.type === 'manual' && (\n          <div className=\"manual-quantities\">\n            <h4>Set Quantities for Each Product</h4>\n            <div className=\"quantities-table-container\">\n              <table className=\"quantities-table\">\n                <thead>\n                  <tr>\n                    <th>Product</th>\n                    <th>Barcode</th>\n                    <th>Quantity</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {excelData.rows.map((row, index) => {\n                    const productInfo = getProductInfo(row, index);\n                    return (\n                      <tr key={index}>\n                        <td>{productInfo.text}</td>\n                        <td>{productInfo.barcode}</td>\n                        <td>\n                          <input\n                            type=\"number\"\n                            className=\"quantity-input\"\n                            value={manualQuantities[index] || 1}\n                            min=\"1\"\n                            max=\"1000\"\n                            onChange={(e) => handleManualQuantityChange(index, e.target.value)}\n                          />\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n\n        <div className=\"quantity-summary\">\n          <div className=\"summary-card\">\n            <h4>Generation Summary</h4>\n            <div className=\"summary-grid\">\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Total Products:</span>\n                <span className=\"summary-value\">{summary.products}</span>\n              </div>\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Total Labels:</span>\n                <span className=\"summary-value\">{summary.labels}</span>\n              </div>\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Estimated Pages:</span>\n                <span className=\"summary-value\">{summary.pages}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"step-actions\">\n          <button className=\"btn btn-outline\" onClick={handlePrevious}>\n            Previous\n          </button>\n          <button className=\"btn btn-primary\" onClick={handleNext}>\n            Continue to Generation\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuantityManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}