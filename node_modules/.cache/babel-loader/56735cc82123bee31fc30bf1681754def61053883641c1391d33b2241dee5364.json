{"ast":null,"code":"var _jsxFileName = \"/workspace/src/context/AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  currentStep: 1,\n  excelData: null,\n  columnHeaders: [],\n  mappedColumns: {\n    barcode: null,\n    text: [],\n    quantity: null\n  },\n  labelSettings: {\n    size: '2x1',\n    customWidth: 2,\n    customHeight: 1,\n    barcodeType: 'EAN13',\n    elements: [],\n    selectedElementId: null,\n    nextElementId: 1\n  },\n  generatedLabels: [],\n  quantitySettings: {\n    type: 'column',\n    fixedQuantity: 1,\n    manualQuantities: {}\n  },\n  loading: false,\n  error: null\n};\n\n// Action types\nexport const ActionTypes = {\n  SET_STEP: 'SET_STEP',\n  SET_EXCEL_DATA: 'SET_EXCEL_DATA',\n  SET_COLUMN_HEADERS: 'SET_COLUMN_HEADERS',\n  SET_MAPPED_COLUMNS: 'SET_MAPPED_COLUMNS',\n  SET_LABEL_SETTINGS: 'SET_LABEL_SETTINGS',\n  SET_QUANTITY_SETTINGS: 'SET_QUANTITY_SETTINGS',\n  SET_GENERATED_LABELS: 'SET_GENERATED_LABELS',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  RESET_APP: 'RESET_APP'\n};\n\n// Reducer\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.SET_STEP:\n      return {\n        ...state,\n        currentStep: action.payload\n      };\n    case ActionTypes.SET_EXCEL_DATA:\n      return {\n        ...state,\n        excelData: action.payload\n      };\n    case ActionTypes.SET_COLUMN_HEADERS:\n      return {\n        ...state,\n        columnHeaders: action.payload\n      };\n    case ActionTypes.SET_MAPPED_COLUMNS:\n      return {\n        ...state,\n        mappedColumns: {\n          ...state.mappedColumns,\n          ...action.payload\n        }\n      };\n    case ActionTypes.SET_LABEL_SETTINGS:\n      return {\n        ...state,\n        labelSettings: {\n          ...state.labelSettings,\n          ...action.payload\n        }\n      };\n    case ActionTypes.SET_QUANTITY_SETTINGS:\n      return {\n        ...state,\n        quantitySettings: {\n          ...state.quantitySettings,\n          ...action.payload\n        }\n      };\n    case ActionTypes.SET_GENERATED_LABELS:\n      return {\n        ...state,\n        generatedLabels: action.payload\n      };\n    case ActionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case ActionTypes.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case ActionTypes.RESET_APP:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\n// Context\nconst AppContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  const actions = {\n    setStep: step => dispatch({\n      type: ActionTypes.SET_STEP,\n      payload: step\n    }),\n    setExcelData: data => dispatch({\n      type: ActionTypes.SET_EXCEL_DATA,\n      payload: data\n    }),\n    setColumnHeaders: headers => dispatch({\n      type: ActionTypes.SET_COLUMN_HEADERS,\n      payload: headers\n    }),\n    setMappedColumns: columns => dispatch({\n      type: ActionTypes.SET_MAPPED_COLUMNS,\n      payload: columns\n    }),\n    setLabelSettings: settings => dispatch({\n      type: ActionTypes.SET_LABEL_SETTINGS,\n      payload: settings\n    }),\n    setQuantitySettings: settings => dispatch({\n      type: ActionTypes.SET_QUANTITY_SETTINGS,\n      payload: settings\n    }),\n    setGeneratedLabels: labels => dispatch({\n      type: ActionTypes.SET_GENERATED_LABELS,\n      payload: labels\n    }),\n    setLoading: loading => dispatch({\n      type: ActionTypes.SET_LOADING,\n      payload: loading\n    }),\n    setError: error => dispatch({\n      type: ActionTypes.SET_ERROR,\n      payload: error\n    }),\n    resetApp: () => dispatch({\n      type: ActionTypes.RESET_APP\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      state,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the context\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nexport const useApp = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialState","currentStep","excelData","columnHeaders","mappedColumns","barcode","text","quantity","labelSettings","size","customWidth","customHeight","barcodeType","elements","selectedElementId","nextElementId","generatedLabels","quantitySettings","type","fixedQuantity","manualQuantities","loading","error","ActionTypes","SET_STEP","SET_EXCEL_DATA","SET_COLUMN_HEADERS","SET_MAPPED_COLUMNS","SET_LABEL_SETTINGS","SET_QUANTITY_SETTINGS","SET_GENERATED_LABELS","SET_LOADING","SET_ERROR","RESET_APP","appReducer","state","action","payload","AppContext","AppProvider","children","_s","dispatch","actions","setStep","step","setExcelData","data","setColumnHeaders","headers","setMappedColumns","columns","setLabelSettings","settings","setQuantitySettings","setGeneratedLabels","labels","setLoading","setError","resetApp","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","Error","$RefreshReg$"],"sources":["/workspace/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\n// Initial state\nconst initialState = {\n  currentStep: 1,\n  excelData: null,\n  columnHeaders: [],\n  mappedColumns: {\n    barcode: null,\n    text: [],\n    quantity: null\n  },\n  labelSettings: {\n    size: '2x1',\n    customWidth: 2,\n    customHeight: 1,\n    barcodeType: 'EAN13',\n    elements: [],\n    selectedElementId: null,\n    nextElementId: 1\n  },\n  generatedLabels: [],\n  quantitySettings: {\n    type: 'column',\n    fixedQuantity: 1,\n    manualQuantities: {}\n  },\n  loading: false,\n  error: null\n};\n\n// Action types\nexport const ActionTypes = {\n  SET_STEP: 'SET_STEP',\n  SET_EXCEL_DATA: 'SET_EXCEL_DATA',\n  SET_COLUMN_HEADERS: 'SET_COLUMN_HEADERS',\n  SET_MAPPED_COLUMNS: 'SET_MAPPED_COLUMNS',\n  SET_LABEL_SETTINGS: 'SET_LABEL_SETTINGS',\n  SET_QUANTITY_SETTINGS: 'SET_QUANTITY_SETTINGS',\n  SET_GENERATED_LABELS: 'SET_GENERATED_LABELS',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  RESET_APP: 'RESET_APP'\n};\n\n// Reducer\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.SET_STEP:\n      return { ...state, currentStep: action.payload };\n    \n    case ActionTypes.SET_EXCEL_DATA:\n      return { ...state, excelData: action.payload };\n    \n    case ActionTypes.SET_COLUMN_HEADERS:\n      return { ...state, columnHeaders: action.payload };\n    \n    case ActionTypes.SET_MAPPED_COLUMNS:\n      return { ...state, mappedColumns: { ...state.mappedColumns, ...action.payload } };\n    \n    case ActionTypes.SET_LABEL_SETTINGS:\n      return { ...state, labelSettings: { ...state.labelSettings, ...action.payload } };\n    \n    case ActionTypes.SET_QUANTITY_SETTINGS:\n      return { ...state, quantitySettings: { ...state.quantitySettings, ...action.payload } };\n    \n    case ActionTypes.SET_GENERATED_LABELS:\n      return { ...state, generatedLabels: action.payload };\n    \n    case ActionTypes.SET_LOADING:\n      return { ...state, loading: action.payload };\n    \n    case ActionTypes.SET_ERROR:\n      return { ...state, error: action.payload };\n    \n    case ActionTypes.RESET_APP:\n      return initialState;\n    \n    default:\n      return state;\n  }\n};\n\n// Context\nconst AppContext = createContext();\n\n// Provider component\nexport const AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  const actions = {\n    setStep: (step) => dispatch({ type: ActionTypes.SET_STEP, payload: step }),\n    setExcelData: (data) => dispatch({ type: ActionTypes.SET_EXCEL_DATA, payload: data }),\n    setColumnHeaders: (headers) => dispatch({ type: ActionTypes.SET_COLUMN_HEADERS, payload: headers }),\n    setMappedColumns: (columns) => dispatch({ type: ActionTypes.SET_MAPPED_COLUMNS, payload: columns }),\n    setLabelSettings: (settings) => dispatch({ type: ActionTypes.SET_LABEL_SETTINGS, payload: settings }),\n    setQuantitySettings: (settings) => dispatch({ type: ActionTypes.SET_QUANTITY_SETTINGS, payload: settings }),\n    setGeneratedLabels: (labels) => dispatch({ type: ActionTypes.SET_GENERATED_LABELS, payload: labels }),\n    setLoading: (loading) => dispatch({ type: ActionTypes.SET_LOADING, payload: loading }),\n    setError: (error) => dispatch({ type: ActionTypes.SET_ERROR, payload: error }),\n    resetApp: () => dispatch({ type: ActionTypes.RESET_APP })\n  };\n\n  return (\n    <AppContext.Provider value={{ state, actions }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Custom hook to use the context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}