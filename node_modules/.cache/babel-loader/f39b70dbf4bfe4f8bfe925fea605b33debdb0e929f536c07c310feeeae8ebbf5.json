{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useApp}from'../context/AppContext';import{renderLabel,LABEL_SIZES}from'../utils/labelRenderer';import jsPDF from'jspdf';import JSZip from'jszip';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Generation=()=>{const{state,actions}=useApp();const{excelData,mappedColumns,labelSettings,quantitySettings}=state;const[generationProgress,setGenerationProgress]=useState(0);const[isGenerating,setIsGenerating]=useState(false);const[showPageSizeSelection,setShowPageSizeSelection]=useState(false);const[pageSize,setPageSize]=useState('a4');// Use shared LABEL_SIZES from utils\nconst PAGE_SIZES={a4:{width:210,height:297,unit:'mm'},letter:{width:216,height:279,unit:'mm'},legal:{width:216,height:356,unit:'mm'}};const calculateSummary=()=>{if(!excelData)return{products:0,labels:0,size:'',barcodeType:''};const products=excelData.rows.length;let totalLabels=0;if(quantitySettings.type==='column'&&mappedColumns.quantity){const quantityColumnIndex=excelData.columnHeaders.indexOf(mappedColumns.quantity);totalLabels=excelData.rows.reduce((sum,row)=>{const qty=parseInt(row[quantityColumnIndex])||1;return sum+qty;},0);}else if(quantitySettings.type==='fixed'){totalLabels=products*quantitySettings.fixedQuantity;}else if(quantitySettings.type==='manual'){totalLabels=Object.values(quantitySettings.manualQuantities).reduce((sum,qty)=>sum+qty,0);}const currentSize=LABEL_SIZES[labelSettings.size]||LABEL_SIZES['2x1'];const size=labelSettings.size==='custom'?{width:labelSettings.customWidth,height:labelSettings.customHeight}:currentSize;const sizeText=\"\".concat(size.width,\"\\\" x \").concat(size.height,\"\\\"\");return{products,labels:totalLabels,size:sizeText,barcodeType:labelSettings.barcodeType};};const summary=calculateSummary();const generateLabels=async()=>{if(!excelData||!mappedColumns.barcode){actions.setError('Missing required data for label generation');return;}setIsGenerating(true);setGenerationProgress(0);try{const labels=[];const barcodeColumnIndex=excelData.columnHeaders.indexOf(mappedColumns.barcode);const textColumns=mappedColumns.text.map(col=>excelData.columnHeaders.indexOf(col)).filter(index=>index!==-1);let processedCount=0;const totalRows=excelData.rows.length;for(let rowIndex=0;rowIndex<excelData.rows.length;rowIndex++){const row=excelData.rows[rowIndex];const barcode=row[barcodeColumnIndex];if(!barcode)continue;// Get quantity for this row\nlet quantity=1;if(quantitySettings.type==='column'&&mappedColumns.quantity){const quantityColumnIndex=excelData.columnHeaders.indexOf(mappedColumns.quantity);quantity=parseInt(row[quantityColumnIndex])||1;}else if(quantitySettings.type==='fixed'){quantity=quantitySettings.fixedQuantity;}else if(quantitySettings.type==='manual'){quantity=quantitySettings.manualQuantities[rowIndex]||1;}// Get text content\nconst textContent=textColumns.map(colIndex=>row[colIndex]).filter(val=>val).join(' - ');// Generate labels for this product\nfor(let i=0;i<quantity;i++){const labelData={barcode,text:textContent,productIndex:rowIndex,labelIndex:i};labels.push(labelData);}processedCount++;setGenerationProgress(processedCount/totalRows*100);}actions.setGeneratedLabels(labels);setGenerationProgress(100);}catch(error){actions.setError('Error generating labels: '+error.message);}finally{setIsGenerating(false);}};const downloadZIP=async()=>{if(!state.generatedLabels.length){actions.setError('No labels generated yet');return;}try{actions.setLoading(true);const zip=new JSZip();for(let i=0;i<state.generatedLabels.length;i++){const label=state.generatedLabels[i];// Use shared rendering function for consistency with design\nconst canvas=renderLabel(label,labelSettings,labelSettings.elements);// Convert to blob and add to zip\nconst blob=await new Promise(resolve=>canvas.toBlob(resolve,'image/png'));zip.file(\"label_\".concat(label.productIndex+1,\"_\").concat(label.labelIndex+1,\".png\"),blob);}const zipBlob=await zip.generateAsync({type:'blob'});const url=URL.createObjectURL(zipBlob);const a=document.createElement('a');a.href=url;a.download='barcode_labels.zip';document.body.appendChild(a);a.click();document.body.removeChild(a);URL.revokeObjectURL(url);}catch(error){actions.setError('Error creating ZIP file: '+error.message);}finally{actions.setLoading(false);}};const downloadPDF=async()=>{if(!state.generatedLabels.length){actions.setError('No labels generated yet');return;}try{actions.setLoading(true);const pdf=new jsPDF({orientation:'portrait',unit:'mm',format:pageSize});const currentSize=LABEL_SIZES[labelSettings.size]||LABEL_SIZES['2x1'];const size=labelSettings.size==='custom'?{width:labelSettings.customWidth,height:labelSettings.customHeight}:currentSize;const pageSizeInfo=PAGE_SIZES[pageSize];// Calculate labels per page\nconst labelWidthMM=size.width*25.4;// Convert inches to mm\nconst labelHeightMM=size.height*25.4;const margin=10;// 10mm margin\nconst labelsPerRow=Math.floor((pageSizeInfo.width-2*margin)/labelWidthMM);const labelsPerColumn=Math.floor((pageSizeInfo.height-2*margin)/labelHeightMM);const labelsPerPage=labelsPerRow*labelsPerColumn;let currentPage=0;let currentRow=0;let currentCol=0;for(let i=0;i<state.generatedLabels.length;i++){const label=state.generatedLabels[i];if(i>0&&i%labelsPerPage===0){pdf.addPage();currentPage++;currentRow=0;currentCol=0;}// Calculate position\nconst x=margin+currentCol*labelWidthMM;const y=margin+currentRow*labelHeightMM;// Use shared rendering function for consistency with design\nconst canvas=renderLabel(label,labelSettings,labelSettings.elements);// Convert canvas to image and add to PDF\nconst imgData=canvas.toDataURL('image/png');pdf.addImage(imgData,'PNG',x,y,labelWidthMM,labelHeightMM);// Update position\ncurrentCol++;if(currentCol>=labelsPerRow){currentCol=0;currentRow++;}}pdf.save('barcode_labels.pdf');}catch(error){actions.setError('Error creating PDF: '+error.message);}finally{actions.setLoading(false);}};const handlePrevious=()=>{actions.setStep(4);};const handleStartOver=()=>{actions.resetApp();};return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Step 5: Generate & Export Labels\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-description\",children:\"Generate your labels and download in your preferred format\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"generation-summary\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"summary-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Final Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"File:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"summary-value\",children:(excelData===null||excelData===void 0?void 0:excelData.fileName)||'-'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Products:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"summary-value\",children:summary.products})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Total Labels:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"summary-value\",children:summary.labels})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Label Size:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"summary-value\",children:summary.size})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Barcode Type:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"summary-value\",children:summary.barcodeType})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"generation-actions\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary btn-large\",onClick:generateLabels,disabled:isGenerating,children:[/*#__PURE__*/_jsx(\"span\",{className:\"btn-icon\",children:\"\\uD83D\\uDE80\"}),\"Generate All Labels\"]})}),isGenerating&&/*#__PURE__*/_jsx(\"div\",{className:\"generation-progress\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(generationProgress,\"%\")}})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Generating labels... \",Math.round(generationProgress),\"%\"]})]})}),state.generatedLabels.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"download-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Download Your Labels\"}),showPageSizeSelection&&/*#__PURE__*/_jsxs(\"div\",{className:\"page-size-selection\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Select Page Size for PDF\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"page-size-options\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"page-a4\",name:\"page-size\",value:\"a4\",checked:pageSize==='a4',onChange:e=>setPageSize(e.target.value)}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"page-a4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"option-title\",children:\"A4 (210 \\xD7 297 mm)\"}),/*#__PURE__*/_jsx(\"span\",{className:\"option-description\",children:\"Standard international size\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"page-letter\",name:\"page-size\",value:\"letter\",checked:pageSize==='letter',onChange:e=>setPageSize(e.target.value)}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"page-letter\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"option-title\",children:\"Letter (8.5 \\xD7 11 in)\"}),/*#__PURE__*/_jsx(\"span\",{className:\"option-description\",children:\"Standard US size\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"page-legal\",name:\"page-size\",value:\"legal\",checked:pageSize==='legal',onChange:e=>setPageSize(e.target.value)}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"page-legal\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"option-title\",children:\"Legal (8.5 \\xD7 14 in)\"}),/*#__PURE__*/_jsx(\"span\",{className:\"option-description\",children:\"Extended length\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"download-options\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary btn-large\",onClick:downloadZIP,disabled:state.loading,children:[/*#__PURE__*/_jsx(\"span\",{className:\"btn-icon\",children:\"\\uD83D\\uDCE6\"}),\"Download ZIP\",/*#__PURE__*/_jsx(\"span\",{className:\"btn-description\",children:\"Individual label images\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-secondary btn-large\",onClick:()=>{setShowPageSizeSelection(!showPageSizeSelection);if(!showPageSizeSelection){setTimeout(downloadPDF,100);}},disabled:state.loading,children:[/*#__PURE__*/_jsx(\"span\",{className:\"btn-icon\",children:\"\\uD83D\\uDCC4\"}),\"Download PDF\",/*#__PURE__*/_jsx(\"span\",{className:\"btn-description\",children:\"Print-ready labels in PDF format\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"download-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"ZIP Format:\"}),\" Contains individual high-resolution label images for custom printing or integration.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"PDF Format:\"}),\" Optimized for printing with proper margins and cut lines. Compatible with Avery label sheets.\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"step-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline\",onClick:handlePrevious,children:\"Previous\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:handleStartOver,children:\"Start Over\"})]})]})]});};export default Generation;","map":{"version":3,"names":["React","useState","useEffect","useApp","renderLabel","LABEL_SIZES","jsPDF","JSZip","jsx","_jsx","jsxs","_jsxs","Generation","state","actions","excelData","mappedColumns","labelSettings","quantitySettings","generationProgress","setGenerationProgress","isGenerating","setIsGenerating","showPageSizeSelection","setShowPageSizeSelection","pageSize","setPageSize","PAGE_SIZES","a4","width","height","unit","letter","legal","calculateSummary","products","labels","size","barcodeType","rows","length","totalLabels","type","quantity","quantityColumnIndex","columnHeaders","indexOf","reduce","sum","row","qty","parseInt","fixedQuantity","Object","values","manualQuantities","currentSize","customWidth","customHeight","sizeText","concat","summary","generateLabels","barcode","setError","barcodeColumnIndex","textColumns","text","map","col","filter","index","processedCount","totalRows","rowIndex","textContent","colIndex","val","join","i","labelData","productIndex","labelIndex","push","setGeneratedLabels","error","message","downloadZIP","generatedLabels","setLoading","zip","label","canvas","elements","blob","Promise","resolve","toBlob","file","zipBlob","generateAsync","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","downloadPDF","pdf","orientation","format","pageSizeInfo","labelWidthMM","labelHeightMM","margin","labelsPerRow","Math","floor","labelsPerColumn","labelsPerPage","currentPage","currentRow","currentCol","addPage","x","y","imgData","toDataURL","addImage","save","handlePrevious","setStep","handleStartOver","resetApp","className","children","fileName","onClick","disabled","style","round","id","name","value","checked","onChange","e","target","htmlFor","loading","setTimeout"],"sources":["/workspace/src/components/Generation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useApp } from '../context/AppContext';\nimport { renderLabel, LABEL_SIZES } from '../utils/labelRenderer';\nimport jsPDF from 'jspdf';\nimport JSZip from 'jszip';\n\nconst Generation = () => {\n  const { state, actions } = useApp();\n  const { excelData, mappedColumns, labelSettings, quantitySettings } = state;\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [showPageSizeSelection, setShowPageSizeSelection] = useState(false);\n  const [pageSize, setPageSize] = useState('a4');\n\n  // Use shared LABEL_SIZES from utils\n\n  const PAGE_SIZES = {\n    a4: { width: 210, height: 297, unit: 'mm' },\n    letter: { width: 216, height: 279, unit: 'mm' },\n    legal: { width: 216, height: 356, unit: 'mm' }\n  };\n\n  const calculateSummary = () => {\n    if (!excelData) return { products: 0, labels: 0, size: '', barcodeType: '' };\n\n    const products = excelData.rows.length;\n    let totalLabels = 0;\n\n    if (quantitySettings.type === 'column' && mappedColumns.quantity) {\n      const quantityColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.quantity);\n      totalLabels = excelData.rows.reduce((sum, row) => {\n        const qty = parseInt(row[quantityColumnIndex]) || 1;\n        return sum + qty;\n      }, 0);\n    } else if (quantitySettings.type === 'fixed') {\n      totalLabels = products * quantitySettings.fixedQuantity;\n    } else if (quantitySettings.type === 'manual') {\n      totalLabels = Object.values(quantitySettings.manualQuantities).reduce((sum, qty) => sum + qty, 0);\n    }\n\n    const currentSize = LABEL_SIZES[labelSettings.size] || LABEL_SIZES['2x1'];\n    const size = labelSettings.size === 'custom' \n      ? { width: labelSettings.customWidth, height: labelSettings.customHeight }\n      : currentSize;\n    const sizeText = `${size.width}\" x ${size.height}\"`;\n\n    return {\n      products,\n      labels: totalLabels,\n      size: sizeText,\n      barcodeType: labelSettings.barcodeType\n    };\n  };\n\n  const summary = calculateSummary();\n\n  const generateLabels = async () => {\n    if (!excelData || !mappedColumns.barcode) {\n      actions.setError('Missing required data for label generation');\n      return;\n    }\n\n    setIsGenerating(true);\n    setGenerationProgress(0);\n\n    try {\n      const labels = [];\n      const barcodeColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.barcode);\n      const textColumns = mappedColumns.text.map(col => \n        excelData.columnHeaders.indexOf(col)\n      ).filter(index => index !== -1);\n\n      let processedCount = 0;\n      const totalRows = excelData.rows.length;\n\n      for (let rowIndex = 0; rowIndex < excelData.rows.length; rowIndex++) {\n        const row = excelData.rows[rowIndex];\n        const barcode = row[barcodeColumnIndex];\n        \n        if (!barcode) continue;\n\n        // Get quantity for this row\n        let quantity = 1;\n        if (quantitySettings.type === 'column' && mappedColumns.quantity) {\n          const quantityColumnIndex = excelData.columnHeaders.indexOf(mappedColumns.quantity);\n          quantity = parseInt(row[quantityColumnIndex]) || 1;\n        } else if (quantitySettings.type === 'fixed') {\n          quantity = quantitySettings.fixedQuantity;\n        } else if (quantitySettings.type === 'manual') {\n          quantity = quantitySettings.manualQuantities[rowIndex] || 1;\n        }\n\n        // Get text content\n        const textContent = textColumns.map(colIndex => row[colIndex]).filter(val => val).join(' - ');\n\n        // Generate labels for this product\n        for (let i = 0; i < quantity; i++) {\n          const labelData = {\n            barcode,\n            text: textContent,\n            productIndex: rowIndex,\n            labelIndex: i\n          };\n          labels.push(labelData);\n        }\n\n        processedCount++;\n        setGenerationProgress((processedCount / totalRows) * 100);\n      }\n\n      actions.setGeneratedLabels(labels);\n      setGenerationProgress(100);\n    } catch (error) {\n      actions.setError('Error generating labels: ' + error.message);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const downloadZIP = async () => {\n    if (!state.generatedLabels.length) {\n      actions.setError('No labels generated yet');\n      return;\n    }\n\n    try {\n      actions.setLoading(true);\n      const zip = new JSZip();\n\n      for (let i = 0; i < state.generatedLabels.length; i++) {\n        const label = state.generatedLabels[i];\n        \n        // Use shared rendering function for consistency with design\n        const canvas = renderLabel(label, labelSettings, labelSettings.elements);\n        \n        // Convert to blob and add to zip\n        const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/png'));\n        zip.file(`label_${label.productIndex + 1}_${label.labelIndex + 1}.png`, blob);\n      }\n\n      const zipBlob = await zip.generateAsync({ type: 'blob' });\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'barcode_labels.zip';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      actions.setError('Error creating ZIP file: ' + error.message);\n    } finally {\n      actions.setLoading(false);\n    }\n  };\n\n  const downloadPDF = async () => {\n    if (!state.generatedLabels.length) {\n      actions.setError('No labels generated yet');\n      return;\n    }\n\n    try {\n      actions.setLoading(true);\n      const pdf = new jsPDF({\n        orientation: 'portrait',\n        unit: 'mm',\n        format: pageSize\n      });\n\n      const currentSize = LABEL_SIZES[labelSettings.size] || LABEL_SIZES['2x1'];\n      const size = labelSettings.size === 'custom' \n        ? { width: labelSettings.customWidth, height: labelSettings.customHeight }\n        : currentSize;\n      const pageSizeInfo = PAGE_SIZES[pageSize];\n      \n      // Calculate labels per page\n      const labelWidthMM = size.width * 25.4; // Convert inches to mm\n      const labelHeightMM = size.height * 25.4;\n      const margin = 10; // 10mm margin\n      \n      const labelsPerRow = Math.floor((pageSizeInfo.width - 2 * margin) / labelWidthMM);\n      const labelsPerColumn = Math.floor((pageSizeInfo.height - 2 * margin) / labelHeightMM);\n      const labelsPerPage = labelsPerRow * labelsPerColumn;\n\n      let currentPage = 0;\n      let currentRow = 0;\n      let currentCol = 0;\n\n      for (let i = 0; i < state.generatedLabels.length; i++) {\n        const label = state.generatedLabels[i];\n        \n        if (i > 0 && i % labelsPerPage === 0) {\n          pdf.addPage();\n          currentPage++;\n          currentRow = 0;\n          currentCol = 0;\n        }\n\n        // Calculate position\n        const x = margin + currentCol * labelWidthMM;\n        const y = margin + currentRow * labelHeightMM;\n\n        // Use shared rendering function for consistency with design\n        const canvas = renderLabel(label, labelSettings, labelSettings.elements);\n        \n        // Convert canvas to image and add to PDF\n        const imgData = canvas.toDataURL('image/png');\n        pdf.addImage(imgData, 'PNG', x, y, labelWidthMM, labelHeightMM);\n\n        // Update position\n        currentCol++;\n        if (currentCol >= labelsPerRow) {\n          currentCol = 0;\n          currentRow++;\n        }\n      }\n\n      pdf.save('barcode_labels.pdf');\n    } catch (error) {\n      actions.setError('Error creating PDF: ' + error.message);\n    } finally {\n      actions.setLoading(false);\n    }\n  };\n\n  const handlePrevious = () => {\n    actions.setStep(4);\n  };\n\n  const handleStartOver = () => {\n    actions.resetApp();\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h2>Step 5: Generate & Export Labels</h2>\n        <p className=\"card-description\">\n          Generate your labels and download in your preferred format\n        </p>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"generation-summary\">\n          <div className=\"summary-card\">\n            <h4>Final Summary</h4>\n            <div className=\"summary-grid\">\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">File:</span>\n                <span className=\"summary-value\">{excelData?.fileName || '-'}</span>\n              </div>\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Products:</span>\n                <span className=\"summary-value\">{summary.products}</span>\n              </div>\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Total Labels:</span>\n                <span className=\"summary-value\">{summary.labels}</span>\n              </div>\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Label Size:</span>\n                <span className=\"summary-value\">{summary.size}</span>\n              </div>\n              <div className=\"summary-item\">\n                <span className=\"summary-label\">Barcode Type:</span>\n                <span className=\"summary-value\">{summary.barcodeType}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"generation-actions\">\n          <button\n            className=\"btn btn-primary btn-large\"\n            onClick={generateLabels}\n            disabled={isGenerating}\n          >\n            <span className=\"btn-icon\">🚀</span>\n            Generate All Labels\n          </button>\n        </div>\n\n        {isGenerating && (\n          <div className=\"generation-progress\">\n            <div className=\"progress-container\">\n              <div className=\"progress-bar\">\n                <div\n                  className=\"progress-fill\"\n                  style={{ width: `${generationProgress}%` }}\n                ></div>\n              </div>\n              <p>Generating labels... {Math.round(generationProgress)}%</p>\n            </div>\n          </div>\n        )}\n\n        {state.generatedLabels.length > 0 && (\n          <div className=\"download-section\">\n            <h4>Download Your Labels</h4>\n            \n            {showPageSizeSelection && (\n              <div className=\"page-size-selection\">\n                <h5>Select Page Size for PDF</h5>\n                <div className=\"page-size-options\">\n                  <div className=\"option-group\">\n                    <input\n                      type=\"radio\"\n                      id=\"page-a4\"\n                      name=\"page-size\"\n                      value=\"a4\"\n                      checked={pageSize === 'a4'}\n                      onChange={(e) => setPageSize(e.target.value)}\n                    />\n                    <label htmlFor=\"page-a4\">\n                      <span className=\"option-title\">A4 (210 × 297 mm)</span>\n                      <span className=\"option-description\">Standard international size</span>\n                    </label>\n                  </div>\n                  <div className=\"option-group\">\n                    <input\n                      type=\"radio\"\n                      id=\"page-letter\"\n                      name=\"page-size\"\n                      value=\"letter\"\n                      checked={pageSize === 'letter'}\n                      onChange={(e) => setPageSize(e.target.value)}\n                    />\n                    <label htmlFor=\"page-letter\">\n                      <span className=\"option-title\">Letter (8.5 × 11 in)</span>\n                      <span className=\"option-description\">Standard US size</span>\n                    </label>\n                  </div>\n                  <div className=\"option-group\">\n                    <input\n                      type=\"radio\"\n                      id=\"page-legal\"\n                      name=\"page-size\"\n                      value=\"legal\"\n                      checked={pageSize === 'legal'}\n                      onChange={(e) => setPageSize(e.target.value)}\n                    />\n                    <label htmlFor=\"page-legal\">\n                      <span className=\"option-title\">Legal (8.5 × 14 in)</span>\n                      <span className=\"option-description\">Extended length</span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"download-options\">\n              <button\n                className=\"btn btn-primary btn-large\"\n                onClick={downloadZIP}\n                disabled={state.loading}\n              >\n                <span className=\"btn-icon\">📦</span>\n                Download ZIP\n                <span className=\"btn-description\">Individual label images</span>\n              </button>\n              <button\n                className=\"btn btn-secondary btn-large\"\n                onClick={() => {\n                  setShowPageSizeSelection(!showPageSizeSelection);\n                  if (!showPageSizeSelection) {\n                    setTimeout(downloadPDF, 100);\n                  }\n                }}\n                disabled={state.loading}\n              >\n                <span className=\"btn-icon\">📄</span>\n                Download PDF\n                <span className=\"btn-description\">Print-ready labels in PDF format</span>\n              </button>\n            </div>\n            <div className=\"download-info\">\n              <p><strong>ZIP Format:</strong> Contains individual high-resolution label images for custom printing or integration.</p>\n              <p><strong>PDF Format:</strong> Optimized for printing with proper margins and cut lines. Compatible with Avery label sheets.</p>\n            </div>\n          </div>\n        )}\n\n        <div className=\"step-actions\">\n          <button className=\"btn btn-outline\" onClick={handlePrevious}>\n            Previous\n          </button>\n          <button className=\"btn btn-secondary\" onClick={handleStartOver}>\n            Start Over\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Generation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}