{"ast":null,"code":"import _objectSpread from\"/workspace/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer}from'react';// Initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={currentStep:1,excelData:null,columnHeaders:[],mappedColumns:{barcode:null,text:[],quantity:null},labelSettings:{size:'2x1',customWidth:2,customHeight:1,barcodeType:'EAN13',elements:[],selectedElementId:null,nextElementId:1},generatedLabels:[],quantitySettings:{type:'column',fixedQuantity:1,manualQuantities:{}},loading:false,error:null};// Action types\nexport const ActionTypes={SET_STEP:'SET_STEP',SET_EXCEL_DATA:'SET_EXCEL_DATA',SET_COLUMN_HEADERS:'SET_COLUMN_HEADERS',SET_MAPPED_COLUMNS:'SET_MAPPED_COLUMNS',SET_LABEL_SETTINGS:'SET_LABEL_SETTINGS',SET_QUANTITY_SETTINGS:'SET_QUANTITY_SETTINGS',SET_GENERATED_LABELS:'SET_GENERATED_LABELS',SET_LOADING:'SET_LOADING',SET_ERROR:'SET_ERROR',RESET_APP:'RESET_APP'};// Reducer\nconst appReducer=(state,action)=>{switch(action.type){case ActionTypes.SET_STEP:return _objectSpread(_objectSpread({},state),{},{currentStep:action.payload});case ActionTypes.SET_EXCEL_DATA:return _objectSpread(_objectSpread({},state),{},{excelData:action.payload});case ActionTypes.SET_COLUMN_HEADERS:return _objectSpread(_objectSpread({},state),{},{columnHeaders:action.payload});case ActionTypes.SET_MAPPED_COLUMNS:return _objectSpread(_objectSpread({},state),{},{mappedColumns:_objectSpread(_objectSpread({},state.mappedColumns),action.payload)});case ActionTypes.SET_LABEL_SETTINGS:return _objectSpread(_objectSpread({},state),{},{labelSettings:_objectSpread(_objectSpread({},state.labelSettings),action.payload)});case ActionTypes.SET_QUANTITY_SETTINGS:return _objectSpread(_objectSpread({},state),{},{quantitySettings:_objectSpread(_objectSpread({},state.quantitySettings),action.payload)});case ActionTypes.SET_GENERATED_LABELS:return _objectSpread(_objectSpread({},state),{},{generatedLabels:action.payload});case ActionTypes.SET_LOADING:return _objectSpread(_objectSpread({},state),{},{loading:action.payload});case ActionTypes.SET_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case ActionTypes.RESET_APP:return initialState;default:return state;}};// Context\nconst AppContext=/*#__PURE__*/createContext();// Provider component\nexport const AppProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(appReducer,initialState);const actions={setStep:step=>dispatch({type:ActionTypes.SET_STEP,payload:step}),setExcelData:data=>dispatch({type:ActionTypes.SET_EXCEL_DATA,payload:data}),setColumnHeaders:headers=>dispatch({type:ActionTypes.SET_COLUMN_HEADERS,payload:headers}),setMappedColumns:columns=>dispatch({type:ActionTypes.SET_MAPPED_COLUMNS,payload:columns}),setLabelSettings:settings=>dispatch({type:ActionTypes.SET_LABEL_SETTINGS,payload:settings}),setQuantitySettings:settings=>dispatch({type:ActionTypes.SET_QUANTITY_SETTINGS,payload:settings}),setGeneratedLabels:labels=>dispatch({type:ActionTypes.SET_GENERATED_LABELS,payload:labels}),setLoading:loading=>dispatch({type:ActionTypes.SET_LOADING,payload:loading}),setError:error=>dispatch({type:ActionTypes.SET_ERROR,payload:error}),resetApp:()=>dispatch({type:ActionTypes.RESET_APP})};return/*#__PURE__*/_jsx(AppContext.Provider,{value:{state,actions},children:children});};// Custom hook to use the context\nexport const useApp=()=>{const context=useContext(AppContext);if(!context){throw new Error('useApp must be used within an AppProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsx","_jsx","initialState","currentStep","excelData","columnHeaders","mappedColumns","barcode","text","quantity","labelSettings","size","customWidth","customHeight","barcodeType","elements","selectedElementId","nextElementId","generatedLabels","quantitySettings","type","fixedQuantity","manualQuantities","loading","error","ActionTypes","SET_STEP","SET_EXCEL_DATA","SET_COLUMN_HEADERS","SET_MAPPED_COLUMNS","SET_LABEL_SETTINGS","SET_QUANTITY_SETTINGS","SET_GENERATED_LABELS","SET_LOADING","SET_ERROR","RESET_APP","appReducer","state","action","_objectSpread","payload","AppContext","AppProvider","_ref","children","dispatch","actions","setStep","step","setExcelData","data","setColumnHeaders","headers","setMappedColumns","columns","setLabelSettings","settings","setQuantitySettings","setGeneratedLabels","labels","setLoading","setError","resetApp","Provider","value","useApp","context","Error"],"sources":["/workspace/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\n// Initial state\nconst initialState = {\n  currentStep: 1,\n  excelData: null,\n  columnHeaders: [],\n  mappedColumns: {\n    barcode: null,\n    text: [],\n    quantity: null\n  },\n  labelSettings: {\n    size: '2x1',\n    customWidth: 2,\n    customHeight: 1,\n    barcodeType: 'EAN13',\n    elements: [],\n    selectedElementId: null,\n    nextElementId: 1\n  },\n  generatedLabels: [],\n  quantitySettings: {\n    type: 'column',\n    fixedQuantity: 1,\n    manualQuantities: {}\n  },\n  loading: false,\n  error: null\n};\n\n// Action types\nexport const ActionTypes = {\n  SET_STEP: 'SET_STEP',\n  SET_EXCEL_DATA: 'SET_EXCEL_DATA',\n  SET_COLUMN_HEADERS: 'SET_COLUMN_HEADERS',\n  SET_MAPPED_COLUMNS: 'SET_MAPPED_COLUMNS',\n  SET_LABEL_SETTINGS: 'SET_LABEL_SETTINGS',\n  SET_QUANTITY_SETTINGS: 'SET_QUANTITY_SETTINGS',\n  SET_GENERATED_LABELS: 'SET_GENERATED_LABELS',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  RESET_APP: 'RESET_APP'\n};\n\n// Reducer\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.SET_STEP:\n      return { ...state, currentStep: action.payload };\n    \n    case ActionTypes.SET_EXCEL_DATA:\n      return { ...state, excelData: action.payload };\n    \n    case ActionTypes.SET_COLUMN_HEADERS:\n      return { ...state, columnHeaders: action.payload };\n    \n    case ActionTypes.SET_MAPPED_COLUMNS:\n      return { ...state, mappedColumns: { ...state.mappedColumns, ...action.payload } };\n    \n    case ActionTypes.SET_LABEL_SETTINGS:\n      return { ...state, labelSettings: { ...state.labelSettings, ...action.payload } };\n    \n    case ActionTypes.SET_QUANTITY_SETTINGS:\n      return { ...state, quantitySettings: { ...state.quantitySettings, ...action.payload } };\n    \n    case ActionTypes.SET_GENERATED_LABELS:\n      return { ...state, generatedLabels: action.payload };\n    \n    case ActionTypes.SET_LOADING:\n      return { ...state, loading: action.payload };\n    \n    case ActionTypes.SET_ERROR:\n      return { ...state, error: action.payload };\n    \n    case ActionTypes.RESET_APP:\n      return initialState;\n    \n    default:\n      return state;\n  }\n};\n\n// Context\nconst AppContext = createContext();\n\n// Provider component\nexport const AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  const actions = {\n    setStep: (step) => dispatch({ type: ActionTypes.SET_STEP, payload: step }),\n    setExcelData: (data) => dispatch({ type: ActionTypes.SET_EXCEL_DATA, payload: data }),\n    setColumnHeaders: (headers) => dispatch({ type: ActionTypes.SET_COLUMN_HEADERS, payload: headers }),\n    setMappedColumns: (columns) => dispatch({ type: ActionTypes.SET_MAPPED_COLUMNS, payload: columns }),\n    setLabelSettings: (settings) => dispatch({ type: ActionTypes.SET_LABEL_SETTINGS, payload: settings }),\n    setQuantitySettings: (settings) => dispatch({ type: ActionTypes.SET_QUANTITY_SETTINGS, payload: settings }),\n    setGeneratedLabels: (labels) => dispatch({ type: ActionTypes.SET_GENERATED_LABELS, payload: labels }),\n    setLoading: (loading) => dispatch({ type: ActionTypes.SET_LOADING, payload: loading }),\n    setError: (error) => dispatch({ type: ActionTypes.SET_ERROR, payload: error }),\n    resetApp: () => dispatch({ type: ActionTypes.RESET_APP })\n  };\n\n  return (\n    <AppContext.Provider value={{ state, actions }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Custom hook to use the context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}