{"ast":null,"code":"import JsBarcode from'jsbarcode';// Shared label rendering utilities to ensure consistency between design and generation\nexport const LABEL_SIZES={'2x1':{width:2,height:1,dpi:300},'3x1':{width:3,height:1,dpi:300},'2.5x1':{width:2.5,height:1,dpi:300},'4x2':{width:4,height:2,dpi:300},'custom':{width:2,height:1,dpi:300}};export const renderBarcode=function(barcode,barcodeType,width,height){let showText=arguments.length>4&&arguments[4]!==undefined?arguments[4]:true;const canvas=document.createElement('canvas');const ctx=canvas.getContext('2d');// Set canvas size\ncanvas.width=width;canvas.height=height;// Fill background\nctx.fillStyle='white';ctx.fillRect(0,0,width,height);try{// Generate barcode\nconst barcodeCanvas=document.createElement('canvas');JsBarcode(barcodeCanvas,barcode,{format:barcodeType,width:2,height:height*0.6,displayValue:showText,fontSize:Math.max(8,height*0.15),margin:5});// Draw barcode centered\nconst barcodeX=(width-barcodeCanvas.width)/2;const barcodeY=(height-barcodeCanvas.height)/2;ctx.drawImage(barcodeCanvas,barcodeX,barcodeY);return canvas;}catch(error){console.error('Error generating barcode:',error);// Draw error text\nctx.fillStyle='red';ctx.font='12px Arial';ctx.textAlign='center';ctx.fillText('Invalid Barcode',width/2,height/2);return canvas;}};export const renderText=(text,style,width,height)=>{const canvas=document.createElement('canvas');const ctx=canvas.getContext('2d');// Set canvas size\ncanvas.width=width;canvas.height=height;// Fill background\nctx.fillStyle='white';ctx.fillRect(0,0,width,height);// Set text properties\nctx.fillStyle=style.color||'#000000';ctx.font=\"\".concat(style.fontWeight||'normal',\" \").concat(style.fontSize||12,\"px Arial\");ctx.textAlign=style.textAlign||'left';ctx.textBaseline='middle';// Calculate text position\nlet x,y;switch(style.textAlign){case'center':x=width/2;break;case'right':x=width-5;break;default:x=5;}y=height/2;// Draw text\nctx.fillText(text,x,y);return canvas;};export const renderLabel=function(labelData,labelSettings){let elements=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];const currentSize=LABEL_SIZES[labelSettings.size]||LABEL_SIZES['2x1'];const size=labelSettings.size==='custom'?{width:labelSettings.customWidth,height:labelSettings.customHeight}:currentSize;const dpi=currentSize.dpi;const width=size.width*dpi;const height=size.height*dpi;const canvas=document.createElement('canvas');const ctx=canvas.getContext('2d');// Set canvas size\ncanvas.width=width;canvas.height=height;// Fill background\nctx.fillStyle='white';ctx.fillRect(0,0,width,height);// If no elements defined, use default layout\nif(elements.length===0){// Default: barcode centered, text below\nconst barcodeHeight=height*0.6;const barcodeCanvas=renderBarcode(labelData.barcode,labelSettings.barcodeType,width*0.8,barcodeHeight,true);const barcodeX=(width-barcodeCanvas.width)/2;const barcodeY=height*0.1;ctx.drawImage(barcodeCanvas,barcodeX,barcodeY);// Add text if available\nif(labelData.text){ctx.fillStyle='black';ctx.font='16px Arial';ctx.textAlign='center';const textY=height*0.8;ctx.fillText(labelData.text,width/2,textY);}}else{// Render each element\nelements.forEach(element=>{if(element.type==='barcode'){const elementCanvas=renderBarcode(labelData.barcode,labelSettings.barcodeType,element.size.width*(dpi/96),// Convert from display pixels to print pixels\nelement.size.height*(dpi/96));const x=element.position.x*(dpi/96);const y=element.position.y*(dpi/96);ctx.drawImage(elementCanvas,x,y);}else if(element.type==='text'){// Replace placeholder text with actual data\nlet textContent=element.content;if(labelData.text&&textContent.includes('Sample')){textContent=labelData.text;}const elementCanvas=renderText(textContent,element.style,element.size.width*(dpi/96),element.size.height*(dpi/96));const x=element.position.x*(dpi/96);const y=element.position.y*(dpi/96);ctx.drawImage(elementCanvas,x,y);}});}return canvas;};","map":{"version":3,"names":["JsBarcode","LABEL_SIZES","width","height","dpi","renderBarcode","barcode","barcodeType","showText","arguments","length","undefined","canvas","document","createElement","ctx","getContext","fillStyle","fillRect","barcodeCanvas","format","displayValue","fontSize","Math","max","margin","barcodeX","barcodeY","drawImage","error","console","font","textAlign","fillText","renderText","text","style","color","concat","fontWeight","textBaseline","x","y","renderLabel","labelData","labelSettings","elements","currentSize","size","customWidth","customHeight","barcodeHeight","textY","forEach","element","type","elementCanvas","position","textContent","content","includes"],"sources":["/workspace/src/utils/labelRenderer.js"],"sourcesContent":["import JsBarcode from 'jsbarcode';\n\n// Shared label rendering utilities to ensure consistency between design and generation\n\nexport const LABEL_SIZES = {\n  '2x1': { width: 2, height: 1, dpi: 300 },\n  '3x1': { width: 3, height: 1, dpi: 300 },\n  '2.5x1': { width: 2.5, height: 1, dpi: 300 },\n  '4x2': { width: 4, height: 2, dpi: 300 },\n  'custom': { width: 2, height: 1, dpi: 300 }\n};\n\nexport const renderBarcode = (barcode, barcodeType, width, height, showText = true) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  \n  // Set canvas size\n  canvas.width = width;\n  canvas.height = height;\n  \n  // Fill background\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, width, height);\n  \n  try {\n    // Generate barcode\n    const barcodeCanvas = document.createElement('canvas');\n    JsBarcode(barcodeCanvas, barcode, {\n      format: barcodeType,\n      width: 2,\n      height: height * 0.6,\n      displayValue: showText,\n      fontSize: Math.max(8, height * 0.15),\n      margin: 5\n    });\n    \n    // Draw barcode centered\n    const barcodeX = (width - barcodeCanvas.width) / 2;\n    const barcodeY = (height - barcodeCanvas.height) / 2;\n    ctx.drawImage(barcodeCanvas, barcodeX, barcodeY);\n    \n    return canvas;\n  } catch (error) {\n    console.error('Error generating barcode:', error);\n    // Draw error text\n    ctx.fillStyle = 'red';\n    ctx.font = '12px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('Invalid Barcode', width / 2, height / 2);\n    return canvas;\n  }\n};\n\nexport const renderText = (text, style, width, height) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  \n  // Set canvas size\n  canvas.width = width;\n  canvas.height = height;\n  \n  // Fill background\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, width, height);\n  \n  // Set text properties\n  ctx.fillStyle = style.color || '#000000';\n  ctx.font = `${style.fontWeight || 'normal'} ${style.fontSize || 12}px Arial`;\n  ctx.textAlign = style.textAlign || 'left';\n  ctx.textBaseline = 'middle';\n  \n  // Calculate text position\n  let x, y;\n  switch (style.textAlign) {\n    case 'center':\n      x = width / 2;\n      break;\n    case 'right':\n      x = width - 5;\n      break;\n    default:\n      x = 5;\n  }\n  y = height / 2;\n  \n  // Draw text\n  ctx.fillText(text, x, y);\n  \n  return canvas;\n};\n\nexport const renderLabel = (labelData, labelSettings, elements = []) => {\n  const currentSize = LABEL_SIZES[labelSettings.size] || LABEL_SIZES['2x1'];\n  const size = labelSettings.size === 'custom' \n    ? { width: labelSettings.customWidth, height: labelSettings.customHeight }\n    : currentSize;\n  const dpi = currentSize.dpi;\n  const width = size.width * dpi;\n  const height = size.height * dpi;\n  \n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  \n  // Set canvas size\n  canvas.width = width;\n  canvas.height = height;\n  \n  // Fill background\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, width, height);\n  \n  // If no elements defined, use default layout\n  if (elements.length === 0) {\n    // Default: barcode centered, text below\n    const barcodeHeight = height * 0.6;\n    const barcodeCanvas = renderBarcode(\n      labelData.barcode,\n      labelSettings.barcodeType,\n      width * 0.8,\n      barcodeHeight,\n      true\n    );\n    \n    const barcodeX = (width - barcodeCanvas.width) / 2;\n    const barcodeY = height * 0.1;\n    ctx.drawImage(barcodeCanvas, barcodeX, barcodeY);\n    \n    // Add text if available\n    if (labelData.text) {\n      ctx.fillStyle = 'black';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      const textY = height * 0.8;\n      ctx.fillText(labelData.text, width / 2, textY);\n    }\n  } else {\n    // Render each element\n    elements.forEach(element => {\n      if (element.type === 'barcode') {\n        const elementCanvas = renderBarcode(\n          labelData.barcode,\n          labelSettings.barcodeType,\n          element.size.width * (dpi / 96), // Convert from display pixels to print pixels\n          element.size.height * (dpi / 96)\n        );\n        \n        const x = element.position.x * (dpi / 96);\n        const y = element.position.y * (dpi / 96);\n        ctx.drawImage(elementCanvas, x, y);\n      } else if (element.type === 'text') {\n        // Replace placeholder text with actual data\n        let textContent = element.content;\n        if (labelData.text && textContent.includes('Sample')) {\n          textContent = labelData.text;\n        }\n        \n        const elementCanvas = renderText(\n          textContent,\n          element.style,\n          element.size.width * (dpi / 96),\n          element.size.height * (dpi / 96)\n        );\n        \n        const x = element.position.x * (dpi / 96);\n        const y = element.position.y * (dpi / 96);\n        ctx.drawImage(elementCanvas, x, y);\n      }\n    });\n  }\n  \n  return canvas;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}